import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

df = pd.read_excel('online_retail.xlsx')
df=df.iloc[:100,:]

print(df.describe())

data=pd.DataFrame()

print("DECIMAL SCALING ")
data["Quantity"] = df['Quantity']
data["Price"]=df['Price']
x = data.iloc[0:, [0,1]].values
Error =[]
for i in range(1, 10):
    kmeans = KMeans(n_clusters = i).fit(x)
    kmeans.fit(x)
    Error.append(kmeans.inertia_)
    
import matplotlib.pyplot as plt

plt.plot(range(1, 10), Error)
plt.title('Elbow method')
plt.xlabel('No of clusters')
plt.ylabel('Error')
plt.show()

print("_______________________Method 1________________________")

kmeans3 = KMeans(n_clusters=4,max_iter=300)
y_kmeans3 = kmeans3.fit_predict(x)
print(y_kmeans3)
kmeans3.cluster_centers_
plt.scatter(x[:,0],x[:,1],c=y_kmeans3,cmap='rainbow')
print(kmeans.cluster_centers_.shape)
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=100, marker="X" ,c='black')
plt.show()

print("_______________________Method 2________________________")
x = data[["Price","Quantity"]]
#Visualise data points
plt.scatter(x["Quantity"],x["Price"],c='black')
plt.xlabel('Quantity')
plt.ylabel('Price')
plt.show()

#number of clusters
K=3

# Select random observation as centroids
Centroids = (x.sample(n=K))
plt.scatter(x["Quantity"],x["Price"],c='black')
plt.scatter(Centroids["Quantity"],Centroids["Price"],c='red')
plt.xlabel('Quantity')
plt.ylabel('Price')
plt.show()

diff = 1
j=0

while(diff!=0):
    XD=x
    i=1
    for index1,row_c in Centroids.iterrows():
        ED=[]
        for index2,row_d in XD.iterrows():
            d1=(row_c["Quantity"]-row_d["Quantity"])**2
            d2=(row_c["Price"]-row_d["Price"])**2
            d=np.sqrt(d1+d2)
            ED.append(d)
        x[i]=ED
        i=i+1

    C=[]
    for index,row in x.iterrows():
        min_dist=row[1]
        pos=1
        for i in range(K):
            if row[i+1] < min_dist:
                min_dist = row[i+1]
                pos=i+1
        C.append(pos)
    x["Cluster"]=C
    Centroids_new = x.groupby(["Cluster"]).mean()[["Price","Quantity"]]
    if j == 0:
        diff=1
        j=j+1
    else:
        diff = (Centroids_new['Price'] - Centroids['Price']).sum() + (Centroids_new['Quantity'] - Centroids['Quantity']).sum()
        print(diff.sum())
    Centroids = x.groupby(["Cluster"]).mean()[["Price","Quantity"]]

color=['blue','green','yellow']
for k in range(K):
    data=x[x["Cluster"]==k+1]
    plt.scatter(data["Quantity"],data["Price"],c=color[k])
plt.scatter(Centroids["Quantity"],Centroids["Price"],c='red')
plt.xlabel('Quantity')
plt.ylabel('Price')
plt.show()
